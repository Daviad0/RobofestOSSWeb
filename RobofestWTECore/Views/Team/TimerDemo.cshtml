@model RobofestWTE.Models.MatchDataModel

@{
    ViewBag.Title = "Match Manager";
}
<style>
    .btn-group {
        display: flex;
    }


    .btn {
        flex: 1
    }

    btn-default: {
        background-color: gray
    }

    .big {
        font-size: 1.2em;
        border: none;
        border-radius: 4px;
    }

    .custom-dropdown {
        position: relative;
        display: inline-block;
        vertical-align: middle;
        margin: 10px; /* demo only */
    }

        .custom-dropdown select {
            background-color: #1abc9c;
            color: #fff;
            font-size: inherit;
            padding: .5em;
            padding-right: 2.5em;
            border: 0;
            margin: 0;
            border-radius: 3px;
            text-indent: 0.01px;
            text-overflow: '';
            -webkit-appearance: button; /* hide default arrow in chrome OSX */
        }

        .custom-dropdown::before,
        .custom-dropdown::after {
            content: "";
            position: absolute;
            pointer-events: none;
        }

        .custom-dropdown::after { /*  Custom dropdown arrow */
            content: "\25BC";
            height: 1em;
            font-size: .625em;
            line-height: 1;
            right: 1.2em;
            top: 50%;
            margin-top: -.5em;
        }

        .custom-dropdown::before { /*  Custom dropdown arrow cover */
            width: 2em;
            right: 0;
            top: 0;
            bottom: 0;
            border-radius: 0 3px 3px 0;
        }

        .custom-dropdown select[disabled] {
            color: rgba(0,0,0,.3);
        }

            .custom-dropdown select[disabled]::after {
                color: rgba(0,0,0,.1);
            }

        .custom-dropdown::before {
            background-color: rgba(0,0,0,.15);
        }

        .custom-dropdown::after {
            color: rgba(0,0,0,.4);
        }

    .footer {
        position: fixed;
        left: 0;
        bottom: 0;
        width: 100%;
        background-color: transparent;
        color: white;
        text-align: right;
    }

    .createforms {
        border: none;
        border-bottom: 2px solid gray;
        padding-left: 2px;
        transition: 0.3s;
        border-radius: 4px;
    }

        .createforms:hover {
            background-color: #ededed;
            padding-left: 5px;
        }

        .createforms:focus {
            border-bottom: 2px solid red;
            background-color: #ededed;
            padding-left: 5px;
        }

        .createforms:disabled, .createforms:read-only {
            cursor: not-allowed;
            padding-left: 2px;
            transition: 0.3s;
        }

            .createforms:disabled:hover, .createforms:disabled:active, .createforms:read-only:hover, .createforms:read-only:active {
                cursor: not-allowed;
                background-color: red;
                padding-left: 5px;
                opacity: 0.6;
            }

    .text-danger {
        text-align: center;
    }

    .ready {
        animation-name: color;
        animation-duration: 1s;
        animation-iteration-count: infinite;
    }

    @@keyframes color {
        0% {
            background-color: mediumseagreen
        }

        50% {
            background-color: seagreen;
        }
    }
    .almostdone {
        animation-name: colordone;
        animation-duration: 1.5s;
        animation-iteration-count: infinite;
    }
    @@keyframes colordone {
        0% {
            border-bottom-color: green;
            border-top-color: green;
            background-color: green
        }

        50% {
            border-bottom-color: orange;
            border-top-color: orange;
            background-color:orange;
        }
    }

    .judgehelp {
        animation-name: color2;
        animation-duration: 1s;
        animation-iteration-count: infinite;
    }

    @@keyframes color2 {
        0% {
            background-color: yellow
        }

        50% {
            background-color: red;
        }
    }


    .overlay {
        position: fixed;
        display: none;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0,0,0,0.5);
        z-index: 2;
    }

    .textoverlay {
        position: absolute;
        top: 50%;
        left: 50%;
        color: black;
        background-color: white;
        transform: translate(-50%,-50%);
        -ms-transform: translate(-50%,-50%);
    }.column {
  float: left;
  width: 50%;
  padding: 10px;
}
     .timerstarted{
         animation-name: sizeuptimer;
         animation-duration: 1s;
         animation-iteration-count: 1;
     }
    .timerstopped {
        animation-name: sizedowntimer;
        animation-duration: 1s;
        animation-iteration-count: 1;
    }

    @@keyframes sizeuptimer {
        0% {
            font-size: 200px
        }

        100% {
            font-size: 300px
        }
    }
    @@keyframes sizedowntimer {
        0% {
            font-size: 300px
        }

        100% {
            font-size: 200px
        }
    }

    /* Clear floats after the columns */
    .row:after {
        content: "";
        display: table;
        clear: both;
    }
.ournavbar{
    display:none
}.robofestmascot{
     position:fixed;
     bottom:0;
     right:0;
 }
    .robofestlogo {
        position: fixed;
        bottom: 0;
        left: 0;
    }

    .noselect {
        -webkit-touch-callout: none; /* iOS Safari */
        -webkit-user-select: none; /* Safari */
        -moz-user-select: none; /* Old versions of Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
        user-select: none; /* Non-prefixed version, currently
                                  supported by Chrome, Edge, Opera and Firefox */
    }
    .invalidglow{
        box-shadow: 0 0 5px rgba(245, 66, 66, 1);
    }
</style>

@{var timeStamp = DateTime.UtcNow; }
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

<div style="background-color:#EEEEEE;border-radius:6px;border:20px solid #EEEEEE;z-index:-1;text-align:center;padding:10px" class="noselect">
    
    <div id="timerclass">
        <span style="font-size:40px;font-weight:600" id="messageshow">Game Match</span>
        <br />
        <div style="border-radius:4px;display:inline-block;border-radius:8px;margin:40px;margin-top:20px">

            <strong><span style="border-radius:8px 8px 0px 0px;font-family:Arial, Helvetica, sans-serif;background-color:black;padding:25px;padding-right:95px;padding-left:95px;color:white;margin-bottom:0px;margin-top:0px;font-size:200px" class="timerarea"><span id="minutes" class="timerarea minutes">0</span>:<span id="seconds" class="timerarea seconds">00</span></span></strong>

            <div style="background-color:lightgray;text-align:center;border-radius:0px 0px 8px 8px">

                <div class="statustimeout status" style="background-color:gray;width:100%;height:40px;border-radius:0px 0px 8px 8px;margin-top:-25px">
                    
                </div>
            </div>

        </div>
    </div>
    <div style="display: inherit">
        <table style="width:100%">
            <tr>
                <td style="width:50%">
                    <div class="input-group" style="margin:10px;margin-bottom:3px">
                        <span class="input-group-addon" style="background-color:gray;color:white">
                            <span>Minutes</span>
                        </span>
                        <input type="number" id="minutesi" placeholder="0 - 180" class="form-control requiredtostart invalidglow" style="z-index:0" min="0" maxlength="4" max="180" />
                    </div>
                </td>
                <td style="width:50%">
                    <div class="input-group" style="margin:10px;margin-bottom:3px">
                        <span class="input-group-addon" style="background-color:gray;color:white">
                            <span>Seconds</span>
                        </span>
                        <input type="number" id="secondsi" placeholder="0 - 59" class="form-control requiredtostart invalidglow" style="z-index:0" min="0" max="59" maxlength="2" />
                    </div>
                </td>
            </tr>
           
        </table>
        <div class="input-group" style="margin:10px">
            <span class="input-group-addon" style="background-color:gray;color:white">
                <span>Message</span>
            </span>
            <input type="text" id="messagei" class="form-control" style="z-index:0" />
        </div>
        <br />
        

        
        <input type="button" id="starttimer" value="Start" style="background-color:lightgray;width:100%;padding:10px;margin-bottom:10px;margin-top:10px;color:white;font-weight:600;border:none;border-radius:8px;cursor:not-allowed" disabled title="The timer must be set to a value above 0:00"/>
        <input type="button" id="stoptimer" value="Stop" style="background-color:#e32b56;width:100%;padding:10px;margin-bottom:10px;color:white;font-weight:600;border:none;border-radius:8px" hidden/>
        <input type="button" id="confirmstop" value="CONFIRM STOP!" style="background-color:darkred;width:100%;padding:10px;margin-bottom:10px;color:white;font-weight:600;border:none;border-radius:8px" hidden="hidden" />
        <br />
        <input type="button" id="sendtimer" value="Set to User Specified Value" style="width:100%;padding:10px;margin-bottom:10px;color:white;font-weight:600;border:none;border-radius:8px;background-color:lightgray;cursor:not-allowed" disabled title="You must input both minutes and seconds!"/>
        <br />
        <input type="button" id="presetmatch" value="Match Preset" style="background-color:deepskyblue;border-radius:5px;border:none;color:white;font-weight:600"/>
        <input type="button" id="presettimeout" value="Timeout Preset" style="background-color:deepskyblue;border-radius:5px;border:none;color:white;font-weight:600" />
        <input type="button" id="presetpittime" value="Pit Preset" style="background-color:deepskyblue;border-radius:5px;border:none;color:white;font-weight:600" />
        <br />
        <input type="button" id="presetpresentation" value="Presentation Preset" style="background-color:deepskyblue;border-radius:5px;border:none;color:white;font-weight:600;margin-top:5px" />
        <input type="button" id="presetqna" value="Q&A Preset" style="background-color:deepskyblue;border-radius:5px;border:none;color:white;font-weight:600" />
        
    </div>
</div>
<div class="robofestmascot noselect">
    <img src="~/images/robofestMascot_transp.png" style="width:120px;margin-right:10px;margin-bottom:10px"/>
</div>
<div class="robofestlogo noselect">
    <img src="~/images/robofest_words_transparent.png" style="width:180px;margin-left:20px;margin-bottom:20px"/>
</div>
<script src="~/lib/signalr/dist/browser/signalr.js"></script>
<script src="~/lib/jquery/dist/jquery.js"></script>
<script>
    var elem = document.documentElement
    $("#fullscreen").on('click', function () {
        var el = document.getElementById('timerclass');

        // use necessary prefixed versions
        el.webkitRequestFullscreen();
        el.mozRequestFullScreen();
        el.msRequestFullscreen();

        // finally the standard version
        el.requestFullscreen();
    });
        
    
</script>
<script>
    $(function () {
        var timer = false;
        var minutesc = 0;
        var secondsc = 0;
        var secondsview = "00";
        var interval = false;
        var part = 1;
        var minutess = 0;
        var secondss = 0;
        var message = "";
        var abort = false;
        var stopped = true;
        var initseconds = 0;
        var fieldarray = [0, 0, 0, 0, 0, 0];
        var fieldconnected = [false, false, false, false, false, false]
        var fieldjudge = ["", "", "", "", "", ""]
        var currentstage = 0;
        var dangercontrols = false;
        var dangertimer = 0;
        var confirmstoptimer = 0;
        var roundidlist = [0, 0, 0, 0, 0, 0];
        var publicround = 0;
        var currentmatch = 1;
        var oldmatchselected = false;
        var matchesvalid = [false, false, false, false, false, false]
        // Reference the auto-generated proxy for the hub.
        var chat = new signalR.HubConnectionBuilder().withUrl("/scoreHub").build();
        // Create a function that the hub can call back to display messages.
        // Start the connection.
        var fieldsub = 0;
        var lockedin = false;



        $(document).ready(function () {

            });
            $(".roundbutton1").click(function () {
                $("#submitteams").attr("hidden", false);
                $("#round1list").css("background-color", "gray");
                $("#round2list").css("background-color", "lightgray");
                publicround = 1;
            });
            $(".roundbutton2").click(function () {
                $("#submitteams").attr("hidden", false);
                $("#round1list").css("background-color", "lightgray");
                $("#round2list").css("background-color", "gray");
                publicround = 2;
            });
            $("#submitteams").click(function () {
                var teamid1 = $("#field1selection").val();
                var teamid2 = $("#field2selection").val();
                var teamid3 = $("#field3selection").val();
                var teamid4 = $("#field4selection").val();
                var teamid5 = $("#field5selection").val();
                var teamid6 = $("#field6selection").val();
                $("#teamsubmissionstatus").html("[" + teamid1 + ", " + teamid2 + ", " + teamid3 + ", " + teamid4 + ", " + teamid5 + ", " + teamid6 + "] selected for judges!")
                chat.invoke("matchMaker", teamid1, teamid2, teamid3, teamid4, teamid5, teamid6, 1, publicround, matchesvalid[0],matchesvalid[1],matchesvalid[2],matchesvalid[3],matchesvalid[4],matchesvalid[5], compid);
            });
            $("#matchselector").change(function () {
                if (oldmatchselected == true) {
                    $("#oldmatch").remove();
                    oldmatchselected = false
                }
                var selectedmatch = $(this).children(":selected").val();
                var matchnumber = selectedmatch.split("-");
                currentmatch = parseInt(matchnumber[0])
            });
            $("#clearchat").click(function () {
                $(".volunteerchat").empty();
            });
            $("#senddatatest").click(function () {
                chat.invoke("scoreCheck", 1, "0/13/5/11/-2^0/36/-3/5^12/0^-3/0", 50, 0, "1111-1");
            });

            $("#lockin").click(function () {
                fieldsub += parseFloat($("#fieldn").val());
                if (fieldsub > 6 || fieldsub < 1) {
                    $("#fieldissue").text("Field must be 1-6!");
                } else {
                    lockedin = true;
                    $("#fieldn").attr("disabled", true);
                    $("#fieldissue").text("");
                }
            });
            $("#stage1").click(function () {
                chat.invoke("setStage",1);
            });
            $("#stage2").click(function () {
                chat.invoke("setStage", 2);
            });
            $("#stage3").click(function () {
                chat.invoke("setStage", 3);
            });
            $("#stage4").click(function () {
                chat.invoke("setStage", 4);
            });
            $("#stage5").click(function () {
                chat.invoke("setStage", 5);
            });
            $("#stage6").click(function () {
                chat.invoke("setStage", 6);
            });
            $("#nextstage").click(function () {
                if (currentstage == 6) {
                    currentstage = 1
                } else {
                    currentstage++;
                }
                chat.invoke("setStage", currentstage)
            });
            $("#resetmatch").click(function () {
                chat.invoke("setStage", 1);
                $("#seef1score").attr("hidden", true);
                $("#seef2score").attr("hidden", true);
                $("#seef3score").attr("hidden", true);
                $("#seef4score").attr("hidden", true);
                $("#seef5score").attr("hidden", true);
                $("#seef6score").attr("hidden", true);
            });
            $("#prevstage").click(function () {
                if (currentstage == 1) {
                    currentstage = 3
                } else {
                    currentstage--;
                }
                chat.invoke("setStage", currentstage)
            });
            $("#seef1score").click(function () {
                $("#scoreoverlayf1").css("display", "block");
            });
            $("#seef2score").click(function () {
                $("#scoreoverlayf2").css("display", "block");
            });
            $("#seef3score").click(function () {
                $("#scoreoverlayf3").css("display", "block");
            });
            $("#seef4score").click(function () {
                $("#scoreoverlayf4").css("display", "block");
            });
            $("#seef5score").click(function () {
                $("#scoreoverlayf5").css("display", "block");
            });
            $("#seef6score").click(function () {
                $("#scoreoverlayf6").css("display", "block");
            });
            $("#hidef1score").click(function () {
                $("#scoreoverlayf1").css("display", "none");
            });
            $("#hidef2score").click(function () {
                $("#scoreoverlayf2").css("display", "none");
            });
            $("#hidef3score").click(function () {
                $("#scoreoverlayf3").css("display", "none");
            });
            $("#hidef4score").click(function () {
                $("#scoreoverlayf4").css("display", "none");
            });
            $("#hidef5score").click(function () {
                $("#scoreoverlayf5").css("display", "none");
            });
            $("#hidef6score").click(function () {
                $("#scoreoverlayf6").css("display", "none");
            });
            $("#editf1score").click(function () {
                window.open("/Team/RoundEdit/" + roundidlist[0], "_blank");
            });
            $("#editf2score").click(function () {
                window.open("/Team/RoundEdit/" + roundidlist[1], "_blank");
            });
            $("#editf3score").click(function () {
                window.open("/Team/RoundEdit/" + roundidlist[2], "_blank");
            });
            $("#editf4score").click(function () {
                window.open("/Team/RoundEdit/" + roundidlist[3], "_blank");
            });
            $("#editf5score").click(function () {
                window.open("/Team/RoundEdit/" + roundidlist[4], "_blank");
            });
            $("#editf6score").click(function () {
                window.open("/Team/RoundEdit/" + roundidlist[5], "_blank");
            });
            function dangersetback() {
                if (dangertimer > 0) {
                    dangertimer--;
                    $("#dangerchange").val("Hiding Danger Controls in " + dangertimer + "...")
                    setTimeout(dangersetback, 1000);
                } else {
                    $("#dangerchange").val("Show Danger Controls");
                    $("#dangerchange").attr("disabled", false);
                    $("#dangercontrols").css("display", "none");
                }


            }
            $("#dangerchange").click(function () {
                $("#dangercontrols").css("display", "");
                dangercontrols = true;
                $("#dangerchange").val("Hiding Danger Controls in 7...");
                dangertimer = 7;
                $("#dangerchange").attr("disabled", true);
                setTimeout(dangersetback, 1000);
                //#dangercontrols
            });
            $(".dangerbutton").click(function () {
                dangertimer = 0;
                $("#dangerchange").val("Hiding Danger Controls in 0...")
            });
            $("#readystatus").click(function () {
                if (lockedin == true) {
                    $("#fieldissue").text("");
                }
            });
            $("#notreadystatus").click(function () {
                if (lockedin == true) {
                    $("#fieldissue").text("");
                }
            });
            $('#sendtimer').click(function () {
                sendTimer();
                
            });
            $('#starttimer').click(function () {
                StartTimer();
                abort = false;
                timer = true;
                $('#starttimer').attr("hidden", true);
                $('#stoptimer').attr("hidden", false);
                $('#sendtimer').attr("hidden", true);
                $("#presetmatch").attr("hidden", true);
                $("#presettimeout").attr("hidden", true);
                $("#presetpittime").attr("hidden", true);
                $("#presetpresentation").attr("hidden", true);
                $("#presetqna").attr("hidden", true);

            });
            function confirmtimerstop() {
                if (confirmstoptimer > 0) {
                    confirmstoptimer--;
                    $("#confirmstop").val("CONFIRM TIMER STOP (" + confirmstoptimer + ")")
                    setTimeout(confirmtimerstop, 1000);
                } else {
                    if (timer == false) {
                        $('#stoptimer').attr("hidden", true);
                        $('#confirmstop').attr("hidden", true);
                    } else {
                        $('#stoptimer').attr("hidden", false);
                        $('#confirmstop').attr("hidden", true);
                    }
                    
                }
            }
            $("#stoptimer").click(function () {
                $('#stoptimer').attr("hidden", true);
                $('#confirmstop').attr("hidden", false);
                $("#confirmstop").val("CONFIRM TIMER STOP (3)")
                confirmstoptimer = 3;
                setTimeout(confirmtimerstop, 1000);
            });
            $('#confirmstop').click(function () {
                abort = true;
                timer = false;
                $(".timerstatus").css("color", "black");
                SetView(minutesc, secondsc, 3);
                confirmstoptimer = 0;
                $('#starttimer').attr("hidden", false);
                $('#stoptimer').attr("hidden", true);
                $('#confirmstop').attr("hidden", true);
                $('#sendtimer').attr("hidden", false);
                $("#presetmatch").attr("hidden", false);
                $("#presettimeout").attr("hidden", false);
                $("#presetpittime").attr("hidden", false);
                $("#presetpresentation").attr("hidden", false);
                $("#presetqna").attr("hidden", false);
                if (minutesc == 0 && secondsc == 0) {
                    $("#starttimer").attr("disabled", true);
                    $("#starttimer").css("background-color", "lightgray");
                    $("#starttimer").attr("title", "The timer must be set to a value above 0:00");
                    $("#starttimer").css("cursor", "not-allowed");
                }
                $(".timerarea").addClass("timerstopped");
                $(".timerarea").removeClass("timerstarted");
                setTimeout($(".timerarea").css("font-size", "200px"), 1000);
            });
            $(".requiredtostart").on('change keydown keypress keyup mousedown click mouseup', function () {
                if ($("#minutesi").val() != "") {
                    if ($("#secondsi").val() != "") {
                        $("#sendtimer").attr("disabled", false);
                        $("#sendtimer").attr("title", "Set the timer to the current configuration");
                        $("#sendtimer").css("cursor", "pointer");
                        $("#sendtimer").css("background-color", "dimgray");
                        $("#minutesi").removeClass("invalidglow");
                        $("#secondsi").removeClass("invalidglow");
                    } else {
                        $("#sendtimer").attr("disabled", true);
                        $("#sendtimer").attr("title", "You must input both minutes and seconds!");
                        $("#sendtimer").css("cursor", "not-allowed");
                        $("#sendtimer").css("background-color", "lightgray");
                        $("#minutesi").removeClass("invalidglow");
                        $("#secondsi").addClass("invalidglow");
                    }
                } else {
                    $("#sendtimer").attr("disabled", true);
                    $("#sendtimer").attr("title", "You must input both minutes and seconds!");
                    $("#sendtimer").css("cursor", "not-allowed");
                    $("#sendtimer").css("background-color", "lightgray");
                    $("#minutesi").addClass("invalidglow");
                    if ($("#secondsi").val() != "") {
                        $("#secondsi").removeClass("invalidglow");
                    } else {
                        $("#secondsi").addClass("invalidglow");
                    }
                }
            });
            $("#presetmatch").click(function () {
                $("#minutesi").val(2);
                $("#secondsi").val(0);
                $("#messagei").val("Game Match");
                $("#sendtimer").attr("disabled", false);
                $("#sendtimer").attr("title", "Set the timer to the current configuration");
                $("#sendtimer").css("cursor", "pointer");
                $("#sendtimer").css("background-color", "dimgray");
                sendTimer();
            });
            $("#presettimeout").click(function () {
                $("#minutesi").val(5);
                $("#secondsi").val(0);
                $("#messagei").val("Field Timeout");
                $("#sendtimer").attr("disabled", false);
                $("#sendtimer").attr("title", "Set the timer to the current configuration");
                $("#sendtimer").css("cursor", "pointer");
                $("#sendtimer").css("background-color", "dimgray");
                sendTimer();
            });
            $("#presetpittime").click(function () {
                $("#minutesi").val(30);
                $("#secondsi").val(0);
                $("#messagei").val("Pit Work Time");
                $("#sendtimer").attr("disabled", false);
                $("#sendtimer").attr("title", "Set the timer to the current configuration");
                $("#sendtimer").css("cursor", "pointer");
                $("#sendtimer").css("background-color", "dimgray");
                sendTimer();
            });
            $("#presetpresentation").click(function () {
                $("#minutesi").val(4);
                $("#secondsi").val(0);
                $("#messagei").val("Presentation Time");
                $("#sendtimer").attr("disabled", false);
                $("#sendtimer").attr("title", "Set the timer to the current configuration");
                $("#sendtimer").css("cursor", "pointer");
                $("#sendtimer").css("background-color", "dimgray");
                sendTimer();
            });
            $("#presetqna").click(function () {
                $("#minutesi").val(2);
                $("#secondsi").val(0);
                $("#messagei").val("Q&A Time");
                $("#sendtimer").attr("disabled", false);
                $("#sendtimer").attr("title", "Set the timer to the current configuration");
                $("#sendtimer").css("cursor", "pointer");
                $("#sendtimer").css("background-color", "dimgray");
                sendTimer();
            });
            function checkPongs() {
                if (fieldconnected[0] == true) {
                    $("#field1judge").html(fieldjudge[0])
                    if (fieldarray[0] != 0 && fieldarray != 3) {
                        $("#field1connection").html("Connected");
                        $("#field1connection").css("background-color", "dimgray");
                        $("#field1connection").css("color", "white");
                    }
                } else {
                    if (fieldarray[0] != 0 && fieldarray[0] != 3) {
                        $("#field1connection").html("Disconnected");
                        $("#field1connection").css("background-color", "LemonChiffon");
                        $("#field1connection").css("color", "red");
                    }

                }
                if (fieldconnected[1] == true) {
                    $("#field2judge").html(fieldjudge[1])
                    if (fieldarray[1] != 0 && fieldarray != 3) {
                        $("#field2connection").html("Connected");
                        $("#field2connection").css("background-color", "dimgray");
                        $("#field2connection").css("color", "white");
                    }
                } else {
                    if (fieldarray[1] != 0 && fieldarray[1] != 3) {
                        $("#field2connection").html("Disconnected");
                        $("#field2connection").css("background-color", "LemonChiffon");
                        $("#field2connection").css("color", "red");
                    }

                }
                if (fieldconnected[2] == true) {
                    $("#field3judge").html(fieldjudge[2])
                    if (fieldarray[2] != 0 && fieldarray != 3) {
                        $("#field3connection").html("Connected");
                        $("#field3connection").css("background-color", "dimgray");
                        $("#field3connection").css("color", "white");
                    }
                } else {
                    if (fieldarray[2] != 0 && fieldarray[2] != 3) {
                        $("#field3connection").html("Disconnected");
                        $("#field3connection").css("background-color", "LemonChiffon");
                        $("#field3connection").css("color", "red");
                    }

                }
                if (fieldconnected[3] == true) {
                    $("#field4judge").html(fieldjudge[3])
                    if (fieldarray[3] != 0 && fieldarray != 3) {
                        $("#field4connection").html("Connected");
                        $("#field4connection").css("background-color", "dimgray");
                        $("#field4connection").css("color", "white");
                    }
                } else {
                    if (fieldarray[3] != 0 && fieldarray[3] != 3) {
                        $("#field4connection").html("Disconnected");
                        $("#field4connection").css("background-color", "LemonChiffon");
                        $("#field4connection").css("color", "red");
                    }

                }
                if (fieldconnected[4] == true) {
                    $("#field5judge").html(fieldjudge[4])
                    if (fieldarray[4] != 0 && fieldarray != 3) {
                        $("#field5connection").html("Connected");
                        $("#field5connection").css("background-color", "dimgray");
                        $("#field5connection").css("color", "white");
                    }
                } else {
                    if (fieldarray[4] != 0 && fieldarray[4] != 3) {
                        $("#field5connection").html("Disconnected");
                        $("#field5connection").css("background-color", "LemonChiffon");
                        $("#field5connection").css("color", "red");
                    }

                }
                if (fieldconnected[5] == true) {
                    $("#field6judge").html(fieldjudge[6])
                    if (fieldarray[5] != 0 && fieldarray != 3) {
                        $("#field6connection").html("Connected");
                        $("#field6connection").css("background-color", "dimgray");
                        $("#field6connection").css("color", "white");
                    }
                } else {
                    if (fieldarray[5] != 0 && fieldarray[5] != 3) {
                        $("#field6connection").html("Disconnected");
                        $("#field6connection").css("background-color", "LemonChiffon");
                        $("#field6connection").css("color", "red");
                    }

                }
                fieldconnected = [false, false, false, false, false, false]
                $("#ping").html("2");
                setTimeout(pingTeams, 500);
            }
            function sendTimer() {
                abort = true;
                timer = false;
                part = 0;
                
                minutess = parseInt($("#minutesi").val());
                secondss = parseInt($("#secondsi").val());
                message = $("#messagei").val();
                if (message == "") {
                    message = "Timer";
                }
                initseconds = (minutess * 60) + (secondss);
                minutesc = minutess;    
                secondsc = secondss;
                $("#messageshow").html(message)
                
                if (secondsc < 10) {
                    secondsview = "0" + secondsc;
                } else {
                    secondsview = secondsc;
                }
                if (minutesc > 0 || secondsc > 0) {
                    $("#starttimer").attr("disabled", false);
                    $("#starttimer").css("background-color", "#1fa128");
                    $("#starttimer").css("cursor", "pointer");
                    $("#starttimer").attr("title", "Will instantly start the timer!");
                } else {
                    $("#starttimer").attr("disabled", true);
                    $("#starttimer").css("background-color", "lightgray");
                    $("#starttimer").css("cursor", "not-allowed");
                    $("#starttimer").attr("title", "The timer must be set to a value above 0:00");
                }
                
                SetView(minutesc, secondsc, 0);
            }
            function pingTeams() {
                $("#ping").html("1");
                setTimeout(checkPongs, 3000);

            }
            setTimeout(pingTeams, 1000);
            function Countdown() {
                if (timer == true) {
                    if (secondsc == 0) {
                        if (minutesc > 0) {
                            minutesc = minutesc - 1;
                            secondsc = 59;
                            secondsview = "59";
                        } else {
                            timer = false;
                            TimerEnded();
                        }

                    } else if (secondsc < 11) {
                        secondsc = secondsc - 1;
                        secondsview = "0" + secondsc;
                    }
                    else {
                        secondsc = secondsc - 1;
                        secondsview = secondsc;
                    }
                }
            }
            function SetView(minutes, seconds, status) {
                $(".minutes").html(minutes);
                if (secondsc < 10) {
                    secondsview = "0" + secondsc;
                } else {
                    secondsview = secondsc;
                }
                $(".seconds").html(secondsview);
                if (status == 0) {
                    $(".status").css("border-bottom", "12px gray solid");
                    $(".status").css("border-top", "12px gray solid");
                    $(".statustopbar").css("border-left", "6px gray solid");
                    $(".statustimeout").css("background-color", "gray");
                    $(".status").removeClass("almostdone");
                    initsec = ((minutes * 60) + (seconds));
                    $(".statustimeout").css("width", "100%");
                } else if (status == 1) {
                    $(".status").css("border-bottom", "12px green solid");
                    $(".status").css("border-top", "12px green solid");
                    $(".statustopbar").css("border-left", "6px green solid");
                    $(".statustimeout").css("background-color", "green");
                    if (((minutes * 60) + (seconds)) < (initsec / 4)) {
                        $(".status").addClass("almostdone");
                    }
                    $(".statustimeout").css("width", ((((minutes * 60) + seconds) / initsec) * 100) + "%")
                } else if (status == 2 && seconds < 1 && minutes < 1) {
                    $(".status").css("border-bottom", "12px red solid");
                    $(".statustopbar").css("border-left", "6px red solid");
                    $(".status").css("border-top", "12px red solid");

                    $(".statustimeout").css("background-color", "red");
                    $(".statustimeout").css("width", "100%");
                    $(".status").removeClass("almostdone");
                } else {
                    $(".status").css("border-bottom", "12px gray solid");
                    $(".status").css("border-top", "12px gray solid");
                    $(".statustopbar").css("border-left", "6px gray solid");
                    $(".statustimeout").css("background-color", "gray");
                    $(".status").removeClass("almostdone");
                }
            }
            function StartTimer() {
                var count = setInterval(function () {

                    if (abort == true) {
                        clearInterval(count);
                        SetView(minutesc, secondsc, 2);
                    } else {
                        SetView(minutesc, secondsc, 1);
                    }

                    if ((part % 10) == 0) {
                        Countdown();
                    }
                    part++;
                    window.focus();
                }, 100);
                $(".timerarea").removeClass("timerstopped");
                $(".timerarea").addClass("timerstarted");
                $('#stoptimer').attr("hidden", false);
                setTimeout($(".timerarea").css("font-size", "300px"), 1000);
            }
            function TimerEnded() {
                abort = true;
                timer = false;
                $(".timerstatus").css("color", "red");
                SetView(minutesc, secondsc, 2);
            }





    });


</script>
<br />

<script type="text/javascript">
    $("#bitslot4 select").on("change", function () {

        //Stack
        var subtotalstack = 0;
        $(":radio[id='stack']:checked").each(function () {
            subtotalstack += Number(this.value);
        });
        $("#subtotalstack").text(subtotalstack);
        //Extra
        var subtotalextra = 0;
        $(":radio[id='extra']:checked").each(function () {
            subtotalextra += Number(this.value);
        });
        $("#subtotalextra").text(subtotalextra);
        //Penalty
        var subtotalpenalty = 0;
        $(":radio[id='penalty']:checked").each(function () {
            subtotalpenalty += Number(this.value);
        });
        $("#subtotalpenalty").text(subtotalpenalty);
        //Total
        var total = 0;
        $(":radio:checked").each(function () {
            total += Number(this.value);
        });
        $("#total").text(total);
        $("#teamID").val(total);
        $("#teamIDcopy").text(total);
        var description = subtotalbs + "/" + subtotalstack + "/" + subtotalextra + "/" + subtotalpenalty;
        $("#data").val(description);
    });

</script>


@section Scripts {
    <script src="~/Scripts/jquery.signalR-2.4.1.min.js"></script>
    <script src="~/signalr/hubs"></script>
}
