@model List<RobofestWTE.Models.TeamMatch>

<h1>Team Matches</h1>
<div>
    <input type="button" class="btn btn-danger" id="autofill" value="Auto Fill Completed" />
    <input type="button" class="btn btn-danger" id="everythingc" value="Everything Completed" />
    <input type="button" class="btn btn-danger" id="nothingc" value="Nothing Completed" />
    <a class="btn btn-warning" href="@Url.Action("TeamMatches", "Team")">Edit Match Layout</a>
</div>
<br />
@{ int i = 0;}
@foreach (var match in Model.OrderBy(m => m.MatchID).ThenBy(m => m.Order))
        {
            i++;
            string idtoinput = i.ToString() + "-" + match.Order;
            string idtoinputbutton = i.ToString() + "-" + match.Order + "-completed";
            string idtoinputteam = i.ToString() + "-" + match.Order + "-team";
            string idtoinputbuttontest = i.ToString() + "-" + match.Order + "-test";
            string idtoinputbuttonrerun = i.ToString() + "-" + match.Order + "-rerun";
            string idtoinputround = i.ToString() + "-" + match.Order + "-round";
            string idtoinputcompleted = i.ToString() + "-" + match.Order + "-completed";
<div style="background-color:lightgray;border-radius:6px;border:10px solid lightgray;z-index:-1;margin-bottom:10px;" id="@match.MatchID" class="matchentry">
    <label for="@idtoinputteam">Team #</label>
    <input type="text" class="teamentry input-sm" value="@match.TeamNumber" maxlength="7" placeholder="Team Number" id="@idtoinputteam" disabled />
    <label for="@idtoinputround">Round #</label>
    <input type="number" class="input-sm" value="@match.RoundNum" id="@idtoinputround" placeholder="Round #" max="2" min="1" disabled />
    <input type="button" class="btn btn-success completed" value="Toggle Completed" id="@match.MatchID" />
    <input type="button" class="btn btn-primary testmatch" value="Toggle Test Match" id="@match.MatchID" />
    <input type="button" class="btn btn-warning rerun" value="Toggle Rerun" id="@match.MatchID" />
    <span> | </span>
    @if (match.Completed == true)
    {
        <span class="badge badge-pill">Completed</span>
    }
    else if (match.Completed == false)
    {
        <span class="badge badge-pill" style="background-color:darkorange">Not Completed</span>
    }
    @if (match.Test == true)
    {
        <span class="badge badge-pill" style="border: 2px solid deeppink;background-color:lightgray;color:deeppink">Test Match</span>
    }
    @if (match.Rerun == true)
    {
        <span class="badge badge-pill" style="background-color:forestgreen">Rerun</span>
    }


</div>
}
<script src="~/lib/signalr/dist/browser/signalr.js"></script>
<script src="~/lib/jquery/dist/jquery.js"></script>
<script>
    var chat = new signalR.HubConnectionBuilder().withUrl("/scoreHub").build();
    chat.on("reloadRequired", function () {
        location.reload(true);
    });
    chat.start().then(function () {
        var scheduler = {
            "schedules" : []
        }
        $(".completed").on("click", function () {
            var matchid = parseInt($(this).attr("id"))
            chat.invoke("editSpecificSchedule", matchid, "completed");
        });
        $(".testmatch").on("click", function () {
            var matchid = parseInt($(this).attr("id"))
            chat.invoke("editSpecificSchedule", matchid, "testmatch");
        });
        $(".rerun").on("click", function () {
            var matchid = parseInt($(this).attr("id"))
            chat.invoke("editSpecificSchedule", matchid, "rerun");
        });
        $("#autofill").on("click", function () {
            chat.invoke("autoComplete");
        });
        $("#everythingc").on("click", function () {
            chat.invoke("completeAll", true);
        });
        $("#nothingc").on("click", function () {
            chat.invoke("completeAll", false);
        });
    
    
        
    });
</script>