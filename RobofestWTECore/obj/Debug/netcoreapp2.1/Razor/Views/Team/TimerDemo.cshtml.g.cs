#pragma checksum "C:\Users\djree\source\repos\RobofestOSS\RobofestOSSWeb\RobofestWTECore\Views\Team\TimerDemo.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "b4236ff6e6c86498e5cbc8eebc97661baeca4794"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(RobofestWTECore.Pages.Team.Views_Team_TimerDemo), @"mvc.1.0.view", @"/Views/Team/TimerDemo.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Team/TimerDemo.cshtml", typeof(RobofestWTECore.Pages.Team.Views_Team_TimerDemo))]
namespace RobofestWTECore.Pages.Team
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\djree\source\repos\RobofestOSS\RobofestOSSWeb\RobofestWTECore\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 2 "C:\Users\djree\source\repos\RobofestOSS\RobofestOSSWeb\RobofestWTECore\Views\_ViewImports.cshtml"
using RobofestWTECore;

#line default
#line hidden
#line 3 "C:\Users\djree\source\repos\RobofestOSS\RobofestOSSWeb\RobofestWTECore\Views\_ViewImports.cshtml"
using RobofestWTECore.Data;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b4236ff6e6c86498e5cbc8eebc97661baeca4794", @"/Views/Team/TimerDemo.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ce755af2a7418f0d746543a6139563ea8d84f149", @"/Views/_ViewImports.cshtml")]
    public class Views_Team_TimerDemo : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<RobofestWTE.Models.MatchDataModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/signalr/dist/browser/signalr.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/lib/jquery/dist/jquery.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Scripts/jquery.signalR-2.4.1.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/signalr/hubs"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(42, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "C:\Users\djree\source\repos\RobofestOSS\RobofestOSSWeb\RobofestWTECore\Views\Team\TimerDemo.cshtml"
  
    ViewBag.Title = "Match Manager";

#line default
#line hidden
            BeginContext(89, 3230, true);
            WriteLiteral(@"<style>
    .btn-group {
        display: flex;
    }


    .btn {
        flex: 1
    }

    btn-default: {
        background-color: gray
    }

    .big {
        font-size: 1.2em;
        border: none;
        border-radius: 4px;
    }

    .custom-dropdown {
        position: relative;
        display: inline-block;
        vertical-align: middle;
        margin: 10px; /* demo only */
    }

        .custom-dropdown select {
            background-color: #1abc9c;
            color: #fff;
            font-size: inherit;
            padding: .5em;
            padding-right: 2.5em;
            border: 0;
            margin: 0;
            border-radius: 3px;
            text-indent: 0.01px;
            text-overflow: '';
            -webkit-appearance: button; /* hide default arrow in chrome OSX */
        }

        .custom-dropdown::before,
        .custom-dropdown::after {
            content: """";
            position: absolute;
            pointer-events: non");
            WriteLiteral(@"e;
        }

        .custom-dropdown::after { /*  Custom dropdown arrow */
            content: ""\25BC"";
            height: 1em;
            font-size: .625em;
            line-height: 1;
            right: 1.2em;
            top: 50%;
            margin-top: -.5em;
        }

        .custom-dropdown::before { /*  Custom dropdown arrow cover */
            width: 2em;
            right: 0;
            top: 0;
            bottom: 0;
            border-radius: 0 3px 3px 0;
        }

        .custom-dropdown select[disabled] {
            color: rgba(0,0,0,.3);
        }

            .custom-dropdown select[disabled]::after {
                color: rgba(0,0,0,.1);
            }

        .custom-dropdown::before {
            background-color: rgba(0,0,0,.15);
        }

        .custom-dropdown::after {
            color: rgba(0,0,0,.4);
        }

    .footer {
        position: fixed;
        left: 0;
        bottom: 0;
        width: 100%;
        background-colo");
            WriteLiteral(@"r: #ecbb06;
        color: white;
        text-align: center;
    }

    .createforms {
        border: none;
        border-bottom: 2px solid gray;
        padding-left: 2px;
        transition: 0.3s;
        border-radius: 4px;
    }

        .createforms:hover {
            background-color: #ededed;
            padding-left: 5px;
        }

        .createforms:focus {
            border-bottom: 2px solid red;
            background-color: #ededed;
            padding-left: 5px;
        }

        .createforms:disabled, .createforms:read-only {
            cursor: not-allowed;
            padding-left: 2px;
            transition: 0.3s;
        }

            .createforms:disabled:hover, .createforms:disabled:active, .createforms:read-only:hover, .createforms:read-only:active {
                cursor: not-allowed;
                background-color: red;
                padding-left: 5px;
                opacity: 0.6;
            }

    .text-danger {
        text-align");
            WriteLiteral(": center;\r\n    }\r\n\r\n    .ready {\r\n        animation-name: color;\r\n        animation-duration: 1s;\r\n        animation-iteration-count: infinite;\r\n    }\r\n\r\n    ");
            EndContext();
            BeginContext(3320, 314, true);
            WriteLiteral(@"@keyframes color {
        0% {
            background-color: mediumseagreen
        }

        50% {
            background-color: seagreen;
        }
    }
    .almostdone {
        animation-name: colordone;
        animation-duration: 1.5s;
        animation-iteration-count: infinite;
    }
    ");
            EndContext();
            BeginContext(3635, 464, true);
            WriteLiteral(@"@keyframes colordone {
        0% {
            border-bottom-color: green;
            border-top-color: green;
            background-color: green
        }

        50% {
            border-bottom-color: orange;
            border-top-color: orange;
            background-color:orange;
        }
    }

    .judgehelp {
        animation-name: color2;
        animation-duration: 1s;
        animation-iteration-count: infinite;
    }

    ");
            EndContext();
            BeginContext(4100, 879, true);
            WriteLiteral(@"@keyframes color2 {
        0% {
            background-color: yellow
        }

        50% {
            background-color: red;
        }
    }


    .overlay {
        position: fixed;
        display: none;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0,0,0,0.5);
        z-index: 2;
    }

    .textoverlay {
        position: absolute;
        top: 50%;
        left: 50%;
        color: black;
        background-color: white;
        transform: translate(-50%,-50%);
        -ms-transform: translate(-50%,-50%);
    }.column {
  float: left;
  width: 50%;
  padding: 10px;
}

/* Clear floats after the columns */
.row:after {
  content: """";
  display: table;
  clear: both;
}
.ournavbar{
    display:none
}
    
</style>

");
            EndContext();
#line 224 "C:\Users\djree\source\repos\RobofestOSS\RobofestOSSWeb\RobofestWTECore\Views\Team\TimerDemo.cshtml"
  var timeStamp = DateTime.UtcNow; 

#line default
#line hidden
            BeginContext(5017, 4301, true);
            WriteLiteral(@"<br />
<script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js"" integrity=""sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"" crossorigin=""anonymous""></script>
<script src=""https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js"" integrity=""sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"" crossorigin=""anonymous""></script>
<div style=""background-color:#EEEEEE;border-radius:6px;border:20px solid #EEEEEE;z-index:-1;text-align:center;padding:20px"">
    <div id=""timerclass"">
        <div style=""border-radius:4px;display:inline-block;border-radius:8px;margin:40px"">
            <strong><span style=""border-radius:8px 8px 0px 0px;font-family:Arial, Helvetica, sans-serif;background-color:black;padding:35px;color:white;margin-bottom:0px;margin-top:0px;font-size:200px"" class=""timerarea""><span id=""minutes"" class=""timerarea minutes"">0</span>:<span id=""seconds"" class=""timerarea seconds"">00</span></span></strong>


            <");
            WriteLiteral(@"div style=""background-color:lightgray;text-align:center;border-radius:0px 0px 8px 8px"">

                <div class=""statustimeout status"" style=""background-color:gray;width:100%;height:40px;border-radius:0px 0px 8px 8px"">
                    
                </div>
            </div>

        </div>
        </div>
    <div style=""display:inherit"">
        <table style=""width:100%"">
            <tr>
                <td style=""width:50%"">
                    <div class=""input-group"" style=""margin:10px;margin-bottom:3px"">
                        <span class=""input-group-addon"" style=""background-color:gray;color:white"">
                            <span>Minutes</span>
                        </span>
                        <input type=""number"" id=""minutesi"" value=""2"" placeholder=""Minutes"" class=""form-control"" style=""z-index:0"" min=""0"" maxlength=""4"" />
                    </div>
                </td>
                <td style=""width:50%"">
                    <div class=""input-group"" style=""ma");
            WriteLiteral(@"rgin:10px;margin-bottom:3px"">
                        <span class=""input-group-addon"" style=""background-color:gray;color:white"">
                            <span>Seconds</span>
                        </span>
                        <input type=""number"" id=""secondsi"" value=""0"" placeholder=""Seconds"" class=""form-control"" style=""z-index:0"" min=""0"" max=""59"" maxlength=""2"" />
                    </div>
                </td>
            </tr>
           
        </table>
        <div class=""input-group"" style=""margin:10px"">
            <span class=""input-group-addon"" style=""background-color:gray;color:white"">
                <span>Message</span>
            </span>
            <input type=""text"" id=""messagei"" class=""form-control"" style=""z-index:0"" />
        </div>
        
        

        
        <br />
        <input type=""button"" id=""starttimer"" value=""Start"" style=""background-color:#1fa128;width:100%;padding:10px;margin-bottom:10px;margin-top:10px;color:white;font-weight:600;border:none;");
            WriteLiteral(@"border-radius:8px"" />
        <input type=""button"" id=""stoptimer"" value=""Stop"" style=""background-color:#e32b56;width:100%;padding:10px;margin-bottom:10px;color:white;font-weight:600;border:none;border-radius:8px"" />
        <input type=""button"" id=""confirmstop"" value=""CONFIRM STOP!"" style=""background-color:darkred;width:100%;padding:10px;margin-bottom:10px;color:white;font-weight:600;border:none;border-radius:8px"" hidden=""hidden"" />
        <br />
        <input type=""button"" id=""sendtimer"" value=""Set to User Specified Value"" style=""width:100%;padding:10px;margin-bottom:10px;color:white;font-weight:600;border:none;border-radius:8px;background-color:dimgray"" />
        <br />
        <input type=""button"" id=""presetmatch"" value=""Match Preset"" style=""background-color:deepskyblue;border-radius:5px;border:none;color:white;font-weight:600""/>
        <input type=""button"" id=""presettimeout"" value=""Timeout Preset"" style=""background-color:deepskyblue;border-radius:5px;border:none;color:white;font-weight:600"" />");
            WriteLiteral("\n        <input type=\"button\" id=\"presetpittime\" value=\"Pit Preset\" style=\"background-color:deepskyblue;border-radius:5px;border:none;color:white;font-weight:600\" />\r\n        \r\n    </div>\r\n</div>\r\n<br />\r\n");
            EndContext();
            BeginContext(9318, 61, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bdd13ad3e9e04918b4c8da9be48f66fa", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9379, 2, true);
            WriteLiteral("\r\n");
            EndContext();
            BeginContext(9381, 51, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "264bb082a1e7469f86696752679addba", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(9432, 25499, true);
            WriteLiteral(@"
<script>
    var elem = document.documentElement
    $(""#fullscreen"").on('click', function () {
        var el = document.getElementById('timerclass');

        // use necessary prefixed versions
        el.webkitRequestFullscreen();
        el.mozRequestFullScreen();
        el.msRequestFullscreen();

        // finally the standard version
        el.requestFullscreen();
    });
        
    
</script>
<script>
    $(function () {
        var timer = false;
        var minutesc = 0;
        var secondsc = 0;
        var secondsview = ""00"";
        var interval = false;
        var part = 1;
        var minutess = 0;
        var secondss = 0;
        var message = """";
        var abort = false;
        var stopped = true;
        var initseconds = 0;
        var fieldarray = [0, 0, 0, 0, 0, 0];
        var fieldconnected = [false, false, false, false, false, false]
        var fieldjudge = ["""", """", """", """", """", """"]
        var currentstage = 0;
        var dangercontrols = ");
            WriteLiteral(@"false;
        var dangertimer = 0;
        var confirmstoptimer = 0;
        var roundidlist = [0, 0, 0, 0, 0, 0];
        var publicround = 0;
        var currentmatch = 1;
        var oldmatchselected = false;
        var matchesvalid = [false, false, false, false, false, false]
        // Reference the auto-generated proxy for the hub.
        var chat = new signalR.HubConnectionBuilder().withUrl(""/scoreHub"").build();
        // Create a function that the hub can call back to display messages.
        // Start the connection.
        var fieldsub = 0;
        var lockedin = false;
            
            $(""#checkvalid"").click(function () {
                chat.invoke(""checkIfValid"", currentmatch);
            });
            $(document).ready(function () {
                chat.invoke(""selectThisMatch"", 1);
            });
            $("".roundbutton1"").click(function () {
                $(""#submitteams"").attr(""hidden"", false);
                $(""#round1list"").css(""background-colo");
            WriteLiteral(@"r"", ""gray"");
                $(""#round2list"").css(""background-color"", ""lightgray"");
                publicround = 1;
            });
            $("".roundbutton2"").click(function () {
                $(""#submitteams"").attr(""hidden"", false);
                $(""#round1list"").css(""background-color"", ""lightgray"");
                $(""#round2list"").css(""background-color"", ""gray"");
                publicround = 2;
            });
            $(""#submitteams"").click(function () {
                var teamid1 = $(""#field1selection"").val();
                var teamid2 = $(""#field2selection"").val();
                var teamid3 = $(""#field3selection"").val();
                var teamid4 = $(""#field4selection"").val();
                var teamid5 = $(""#field5selection"").val();
                var teamid6 = $(""#field6selection"").val();
                $(""#teamsubmissionstatus"").html(""["" + teamid1 + "", "" + teamid2 + "", "" + teamid3 + "", "" + teamid4 + "", "" + teamid5 + "", "" + teamid6 + ""] selected for judges!"")
");
            WriteLiteral(@"                chat.invoke(""matchMaker"", teamid1, teamid2, teamid3, teamid4, teamid5, teamid6, 1, publicround, matchesvalid[0],matchesvalid[1],matchesvalid[2],matchesvalid[3],matchesvalid[4],matchesvalid[5]);
            });
            $(""#sendchat"").click(function () {
                var message = $(""#usermessage"").val();
                var sender = ""Match Manager (Official)""
                var issue = $(""#userissue"").is("":checked"");
                chat.invoke(""sendMessage"", message, issue, sender)
                $(""#usermessage"").val("""");
            });
            $(""#matchselector"").change(function () {
                if (oldmatchselected == true) {
                    $(""#oldmatch"").remove();
                    oldmatchselected = false
                }
                var selectedmatch = $(this).children("":selected"").val();
                var matchnumber = selectedmatch.split(""-"");
                currentmatch = parseInt(matchnumber[0])
                chat.invoke(""selectThis");
            WriteLiteral(@"Match"", parseInt(matchnumber[0]));
            });
            $(""#broadcastmessage"").click(function () {
                var message = $(""#userbroadcastmessage"").val();
                var sender = ""Match Manager (Official)"";
                var issue = $(""#userbroadcastissue"").is("":checked"");
                var volunteersonly = $(""#userbroadcaststaff"").is("":checked"")
                chat.invoke(""sendBroadcast"", message, issue, sender, volunteersonly)
            });
            $(""#clearchat"").click(function () {
                $("".volunteerchat"").empty();
            });
            $(""#senddatatest"").click(function () {
                chat.invoke(""scoreCheck"", 1, ""0/13/5/11/-2^0/36/-3/5^12/0^-3/0"", 50, 0, ""1111-1"");
            });

            $(""#lockin"").click(function () {
                fieldsub += parseFloat($(""#fieldn"").val());
                if (fieldsub > 6 || fieldsub < 1) {
                    $(""#fieldissue"").text(""Field must be 1-6!"");
                } else {
      ");
            WriteLiteral(@"              lockedin = true;
                    $(""#fieldn"").attr(""disabled"", true);
                    chat.invoke(""initField"",fieldsub, 1);
                    $(""#fieldissue"").text("""");
                }
            });
            $(""#stage1"").click(function () {
                chat.invoke(""setStage"",1);
            });
            $(""#cancelpanic"").click(function () {
                chat.invoke(""judgeHelp"",1, false);
                chat.invoke(""judgeHelp"",2, false);
                chat.invoke(""judgeHelp"",3, false);
                chat.invoke(""judgeHelp"",4, false);
                chat.invoke(""judgeHelp"",5, false);
                chat.invoke(""judgeHelp"",6, false);
            });
            $(""#stage2"").click(function () {
                chat.invoke(""setStage"", 2);
            });
            $(""#stage3"").click(function () {
                chat.invoke(""setStage"", 3);
            });
            $(""#stage4"").click(function () {
                chat.invoke(""setStage"", 4)");
            WriteLiteral(@";
            });
            $(""#stage5"").click(function () {
                chat.invoke(""setStage"", 5);
            });
            $(""#stage6"").click(function () {
                chat.invoke(""setStage"", 6);
            });
            $(""#nextstage"").click(function () {
                if (currentstage == 6) {
                    currentstage = 1
                } else {
                    currentstage++;
                }
                chat.invoke(""setStage"", currentstage)
            });
            $(""#resetmatch"").click(function () {
                chat.invoke(""setStage"", 1);
                $(""#seef1score"").attr(""hidden"", true);
                $(""#seef2score"").attr(""hidden"", true);
                $(""#seef3score"").attr(""hidden"", true);
                $(""#seef4score"").attr(""hidden"", true);
                $(""#seef5score"").attr(""hidden"", true);
                $(""#seef6score"").attr(""hidden"", true);
            });
            $(""#prevstage"").click(function () {
        ");
            WriteLiteral(@"        if (currentstage == 1) {
                    currentstage = 3
                } else {
                    currentstage--;
                }
                chat.invoke(""setStage"", currentstage)
            });
            $(""#seef1score"").click(function () {
                $(""#scoreoverlayf1"").css(""display"", ""block"");
            });
            $(""#seef2score"").click(function () {
                $(""#scoreoverlayf2"").css(""display"", ""block"");
            });
            $(""#seef3score"").click(function () {
                $(""#scoreoverlayf3"").css(""display"", ""block"");
            });
            $(""#seef4score"").click(function () {
                $(""#scoreoverlayf4"").css(""display"", ""block"");
            });
            $(""#seef5score"").click(function () {
                $(""#scoreoverlayf5"").css(""display"", ""block"");
            });
            $(""#seef6score"").click(function () {
                $(""#scoreoverlayf6"").css(""display"", ""block"");
            });
            $(""#hi");
            WriteLiteral(@"def1score"").click(function () {
                $(""#scoreoverlayf1"").css(""display"", ""none"");
            });
            $(""#hidef2score"").click(function () {
                $(""#scoreoverlayf2"").css(""display"", ""none"");
            });
            $(""#hidef3score"").click(function () {
                $(""#scoreoverlayf3"").css(""display"", ""none"");
            });
            $(""#hidef4score"").click(function () {
                $(""#scoreoverlayf4"").css(""display"", ""none"");
            });
            $(""#hidef5score"").click(function () {
                $(""#scoreoverlayf5"").css(""display"", ""none"");
            });
            $(""#hidef6score"").click(function () {
                $(""#scoreoverlayf6"").css(""display"", ""none"");
            });
            $(""#editf1score"").click(function () {
                window.open(""/Team/RoundEdit/"" + roundidlist[0], ""_blank"");
            });
            $(""#editf2score"").click(function () {
                window.open(""/Team/RoundEdit/"" + roundidlist[1], """);
            WriteLiteral(@"_blank"");
            });
            $(""#editf3score"").click(function () {
                window.open(""/Team/RoundEdit/"" + roundidlist[2], ""_blank"");
            });
            $(""#editf4score"").click(function () {
                window.open(""/Team/RoundEdit/"" + roundidlist[3], ""_blank"");
            });
            $(""#editf5score"").click(function () {
                window.open(""/Team/RoundEdit/"" + roundidlist[4], ""_blank"");
            });
            $(""#editf6score"").click(function () {
                window.open(""/Team/RoundEdit/"" + roundidlist[5], ""_blank"");
            });
            function dangersetback() {
                if (dangertimer > 0) {
                    dangertimer--;
                    $(""#dangerchange"").val(""Hiding Danger Controls in "" + dangertimer + ""..."")
                    setTimeout(dangersetback, 1000);
                } else {
                    $(""#dangerchange"").val(""Show Danger Controls"");
                    $(""#dangerchange"").attr(""disabled"",");
            WriteLiteral(@" false);
                    $(""#dangercontrols"").css(""display"", ""none"");
                }


            }
            $(""#dangerchange"").click(function () {
                $(""#dangercontrols"").css(""display"", """");
                dangercontrols = true;
                $(""#dangerchange"").val(""Hiding Danger Controls in 7..."");
                dangertimer = 7;
                $(""#dangerchange"").attr(""disabled"", true);
                setTimeout(dangersetback, 1000);
                //#dangercontrols
            });
            $("".dangerbutton"").click(function () {
                dangertimer = 0;
                $(""#dangerchange"").val(""Hiding Danger Controls in 0..."")
            });
            $(""#readystatus"").click(function () {
                if (lockedin == true) {
                    chat.invoke(""initField"",fieldsub, 2);
                    $(""#fieldissue"").text("""");
                }
            });
            $(""#notreadystatus"").click(function () {
                if (loc");
            WriteLiteral(@"kedin == true) {
                    chat.invoke(""initField"",fieldsub, 1);
                    $(""#fieldissue"").text("""");
                }
            });
            $('#sendtimer').click(function () {
                sendTimer();

            });
            $('#starttimer').click(function () {
                StartTimer();
                abort = false;
                timer = true;
                $('#starttimer').attr(""hidden"", true);
                $('#stoptimer').attr(""hidden"", false);
                $('#sendtimer').attr(""hidden"", true);
                $(""#presetmatch"").attr(""hidden"", true);
                $(""#presettimeout"").attr(""hidden"", true);
                $(""#presetpittime"").attr(""hidden"", true);

            });
            function confirmtimerstop() {
                if (confirmstoptimer > 0) {
                    confirmstoptimer--;
                    $(""#confirmstop"").val(""CONFIRM TIMER STOP ("" + confirmstoptimer + "")"")
                    setTimeout(confirmt");
            WriteLiteral(@"imerstop, 1000);
                } else {
                    $('#stoptimer').attr(""hidden"", false);
                    $('#confirmstop').attr(""hidden"", true);
                }
            }
            $(""#stoptimer"").click(function () {
                $('#stoptimer').attr(""hidden"", true);
                $('#confirmstop').attr(""hidden"", false);
                $(""#confirmstop"").val(""CONFIRM TIMER STOP (3)"")
                confirmstoptimer = 3;
                setTimeout(confirmtimerstop, 1000);
            });
            $('#confirmstop').click(function () {
                abort = true;
                timer = false;
                $("".timerstatus"").css(""color"", ""black"");
                SetView(minutesc, secondsc, 3);
                confirmstoptimer = 0;
                $('#starttimer').attr(""hidden"", false);
                $('#stoptimer').attr(""hidden"", false);
                $('#confirmstop').attr(""hidden"", true);
                $('#sendtimer').attr(""hidden"", false);
   ");
            WriteLiteral(@"             $(""#presetmatch"").attr(""hidden"", false);
                $(""#presettimeout"").attr(""hidden"", false);
                $(""#presetpittime"").attr(""hidden"", false);
            });
            $(""#presetmatch"").click(function () {
                $(""#minutesi"").val(2);
                $(""#secondsi"").val(0);
                $(""#messagei"").val(""Game Match"");
                sendTimer();
            });
            $(""#presettimeout"").click(function () {
                $(""#minutesi"").val(5);
                $(""#secondsi"").val(0);
                $(""#messagei"").val(""Field Timeout"");
                sendTimer();
            });
            $(""#presetpittime"").click(function () {
                $(""#minutesi"").val(30);
                $(""#secondsi"").val(0);
                $(""#messagei"").val(""Pit Work Time"");
                sendTimer();
            });
            function checkPongs() {
                if (fieldconnected[0] == true) {
                    $(""#field1judge"").html(fiel");
            WriteLiteral(@"djudge[0])
                    if (fieldarray[0] != 0 && fieldarray != 3) {
                        $(""#field1connection"").html(""Connected"");
                        $(""#field1connection"").css(""background-color"", ""dimgray"");
                        $(""#field1connection"").css(""color"", ""white"");
                    }
                } else {
                    if (fieldarray[0] != 0 && fieldarray[0] != 3) {
                        $(""#field1connection"").html(""Disconnected"");
                        $(""#field1connection"").css(""background-color"", ""LemonChiffon"");
                        $(""#field1connection"").css(""color"", ""red"");
                    }

                }
                if (fieldconnected[1] == true) {
                    $(""#field2judge"").html(fieldjudge[1])
                    if (fieldarray[1] != 0 && fieldarray != 3) {
                        $(""#field2connection"").html(""Connected"");
                        $(""#field2connection"").css(""background-color"", ""dimgray"");
        ");
            WriteLiteral(@"                $(""#field2connection"").css(""color"", ""white"");
                    }
                } else {
                    if (fieldarray[1] != 0 && fieldarray[1] != 3) {
                        $(""#field2connection"").html(""Disconnected"");
                        $(""#field2connection"").css(""background-color"", ""LemonChiffon"");
                        $(""#field2connection"").css(""color"", ""red"");
                    }

                }
                if (fieldconnected[2] == true) {
                    $(""#field3judge"").html(fieldjudge[2])
                    if (fieldarray[2] != 0 && fieldarray != 3) {
                        $(""#field3connection"").html(""Connected"");
                        $(""#field3connection"").css(""background-color"", ""dimgray"");
                        $(""#field3connection"").css(""color"", ""white"");
                    }
                } else {
                    if (fieldarray[2] != 0 && fieldarray[2] != 3) {
                        $(""#field3connection"").html(""Dis");
            WriteLiteral(@"connected"");
                        $(""#field3connection"").css(""background-color"", ""LemonChiffon"");
                        $(""#field3connection"").css(""color"", ""red"");
                    }

                }
                if (fieldconnected[3] == true) {
                    $(""#field4judge"").html(fieldjudge[3])
                    if (fieldarray[3] != 0 && fieldarray != 3) {
                        $(""#field4connection"").html(""Connected"");
                        $(""#field4connection"").css(""background-color"", ""dimgray"");
                        $(""#field4connection"").css(""color"", ""white"");
                    }
                } else {
                    if (fieldarray[3] != 0 && fieldarray[3] != 3) {
                        $(""#field4connection"").html(""Disconnected"");
                        $(""#field4connection"").css(""background-color"", ""LemonChiffon"");
                        $(""#field4connection"").css(""color"", ""red"");
                    }

                }
                if (f");
            WriteLiteral(@"ieldconnected[4] == true) {
                    $(""#field5judge"").html(fieldjudge[4])
                    if (fieldarray[4] != 0 && fieldarray != 3) {
                        $(""#field5connection"").html(""Connected"");
                        $(""#field5connection"").css(""background-color"", ""dimgray"");
                        $(""#field5connection"").css(""color"", ""white"");
                    }
                } else {
                    if (fieldarray[4] != 0 && fieldarray[4] != 3) {
                        $(""#field5connection"").html(""Disconnected"");
                        $(""#field5connection"").css(""background-color"", ""LemonChiffon"");
                        $(""#field5connection"").css(""color"", ""red"");
                    }

                }
                if (fieldconnected[5] == true) {
                    $(""#field6judge"").html(fieldjudge[6])
                    if (fieldarray[5] != 0 && fieldarray != 3) {
                        $(""#field6connection"").html(""Connected"");
                ");
            WriteLiteral(@"        $(""#field6connection"").css(""background-color"", ""dimgray"");
                        $(""#field6connection"").css(""color"", ""white"");
                    }
                } else {
                    if (fieldarray[5] != 0 && fieldarray[5] != 3) {
                        $(""#field6connection"").html(""Disconnected"");
                        $(""#field6connection"").css(""background-color"", ""LemonChiffon"");
                        $(""#field6connection"").css(""color"", ""red"");
                    }

                }
                fieldconnected = [false, false, false, false, false, false]
                $(""#ping"").html(""2"");
                setTimeout(pingTeams, 500);
            }
            function sendTimer() {
                abort = true;
                timer = false;
                part = 0;
                
                minutess = parseInt($(""#minutesi"").val());
                secondss = parseInt($(""#secondsi"").val());
                message = $(""#messagei"").val();
      ");
            WriteLiteral(@"          initseconds = (minutess * 60) + (secondss);
                minutesc = minutess;    
                secondsc = secondss;
                $(""#message"").html(message)
                if (secondsc < 10) {
                    secondsview = ""0"" + secondsc;
                } else {
                    secondsview = secondsc;
                }
                SetView(minutesc, secondsc, 0);
            }
            function pingTeams() {
                $(""#ping"").html(""1"");
                chat.invoke(""pingField"",7);
                setTimeout(checkPongs, 3000);

            }
            setTimeout(pingTeams, 1000);
            function Countdown() {
                if (timer == true) {
                    if (secondsc == 0) {
                        if (minutesc > 0) {
                            minutesc = minutesc - 1;
                            secondsc = 59;
                            secondsview = ""59"";
                        } else {
                            timer");
            WriteLiteral(@" = false;
                            TimerEnded();
                        }

                    } else if (secondsc < 11) {
                        secondsc = secondsc - 1;
                        secondsview = ""0"" + secondsc;
                    }
                    else {
                        secondsc = secondsc - 1;
                        secondsview = secondsc;
                    }
                }
            }
            function SetView(minutes, seconds, status) {
                $("".minutes"").html(minutes);
                if (secondsc < 10) {
                    secondsview = ""0"" + secondsc;
                } else {
                    secondsview = secondsc;
                }
                $("".seconds"").html(secondsview);
                if (status == 0) {
                    $("".status"").css(""border-bottom"", ""12px gray solid"");
                    $("".status"").css(""border-top"", ""12px gray solid"");
                    $("".statustopbar"").css(""border-left"", ""6px g");
            WriteLiteral(@"ray solid"");
                    $("".statustimeout"").css(""background-color"", ""gray"");
                    $("".status"").removeClass(""almostdone"");
                    initsec = ((minutes * 60) + (seconds));
                    $("".statustimeout"").css(""width"", ""100%"");
                } else if (status == 1) {
                    $("".status"").css(""border-bottom"", ""12px green solid"");
                    $("".status"").css(""border-top"", ""12px green solid"");
                    $("".statustopbar"").css(""border-left"", ""6px green solid"");
                    $("".statustimeout"").css(""background-color"", ""green"");
                    if (((minutes * 60) + (seconds)) < (initsec / 4)) {
                        $("".status"").addClass(""almostdone"");
                    }
                    $("".statustimeout"").css(""width"", ((((minutes * 60) + seconds) / initsec) * 100) + ""%"")
                } else if (status == 2 && seconds < 1 && minutes < 1) {
                    $("".status"").css(""border-bottom"", ""12px red so");
            WriteLiteral(@"lid"");
                    $("".statustopbar"").css(""border-left"", ""6px red solid"");
                    $("".status"").css(""border-top"", ""12px red solid"");

                    $("".statustimeout"").css(""background-color"", ""red"");
                    $("".statustimeout"").css(""width"", ""100%"");
                    $("".status"").removeClass(""almostdone"");
                } else {
                    $("".status"").css(""border-bottom"", ""12px gray solid"");
                    $("".status"").css(""border-top"", ""12px gray solid"");
                    $("".statustopbar"").css(""border-left"", ""6px gray solid"");
                    $("".statustimeout"").css(""background-color"", ""gray"");
                    $("".status"").removeClass(""almostdone"");
                }
            }
            function StartTimer() {
                var count = setInterval(function () {

                    if (abort == true) {
                        clearInterval(count);
                        SetView(minutesc, secondsc, 2);
         ");
            WriteLiteral(@"           } else {
                        SetView(minutesc, secondsc, 1);
                    }

                    if ((part % 10) == 0) {
                        Countdown();
                    }
                    part++;
                    window.focus();
                }, 100);
            }
            function TimerEnded() {
                abort = true;
                timer = false;
                $("".timerstatus"").css(""color"", ""red"");
                $(""#presetmatch"").attr(""hidden"", false);
                $(""#presettimeout"").attr(""hidden"", false);
                $(""#presetpittime"").attr(""hidden"", false);
                SetView(minutesc, secondsc, 2);
            }





    });


</script>
<br />

<script type=""text/javascript"">
    $(""#bitslot4 select"").on(""change"", function () {

        //Stack
        var subtotalstack = 0;
        $("":radio[id='stack']:checked"").each(function () {
            subtotalstack += Number(this.value);
        });
     ");
            WriteLiteral(@"   $(""#subtotalstack"").text(subtotalstack);
        //Extra
        var subtotalextra = 0;
        $("":radio[id='extra']:checked"").each(function () {
            subtotalextra += Number(this.value);
        });
        $(""#subtotalextra"").text(subtotalextra);
        //Penalty
        var subtotalpenalty = 0;
        $("":radio[id='penalty']:checked"").each(function () {
            subtotalpenalty += Number(this.value);
        });
        $(""#subtotalpenalty"").text(subtotalpenalty);
        //Total
        var total = 0;
        $("":radio:checked"").each(function () {
            total += Number(this.value);
        });
        $(""#total"").text(total);
        $(""#teamID"").val(total);
        $(""#teamIDcopy"").text(total);
        var description = subtotalbs + ""/"" + subtotalstack + ""/"" + subtotalextra + ""/"" + subtotalpenalty;
        $(""#data"").val(description);
    });

</script>


");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(34949, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(34955, 61, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "3018a1d9460943359f6ebb0ab03a8e45", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(35016, 6, true);
                WriteLiteral("\r\n    ");
                EndContext();
                BeginContext(35022, 38, false);
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "df558540fa644e099d54f72cd03afe4a", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                EndContext();
                BeginContext(35060, 2, true);
                WriteLiteral("\r\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<RobofestWTE.Models.MatchDataModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
